{
  "stats": {
    "suites": 10,
    "tests": 77,
    "passes": 69,
    "pending": 0,
    "failures": 8,
    "start": "2023-11-27T15:09:27.236Z",
    "end": "2023-11-27T15:09:27.373Z",
    "duration": 137,
    "testsRegistered": 77,
    "passPercent": 89.6103896103896,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "89b6032f-ea32-4581-97cc-b0c49e2ad863",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4b12b051-fcad-4afd-a5d5-b4b65225a826",
          "title": "Add.js:",
          "fullFile": "E:\\Opintoja\\Kurssit\\LK2023_2024\\OhjTestaus\\SW-testing\\sw-test-app\\tests\\add.test.js",
          "file": "\\tests\\add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "addition - adds 1.25 and 2, should return 3.25 with type \"number\"",
              "fullTitle": "Add.js: addition - adds 1.25 and 2, should return 3.25 with type \"number\"",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "result = (0, _add[\"default\"])(a, b);\nexpect(result).to.equal(a + b);\nassert.isNumber(result, 'add.js returns variable with type \"number\"');\ndone();",
              "err": {},
              "uuid": "57ef0c1b-3c75-4f45-84ef-8006104d2102",
              "parentUUID": "4b12b051-fcad-4afd-a5d5-b4b65225a826",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "substraction (by adding a negative number) - adds 1.25 and -3, should return -1.75 with type \"number\"",
              "fullTitle": "Add.js: substraction (by adding a negative number) - adds 1.25 and -3, should return -1.75 with type \"number\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "result = (0, _add[\"default\"])(a, c);\nexpect(result).to.equal(a + c);\nassert.isNumber(result, 'add.js returns variable with type \"number\"');\ndone();",
              "err": {},
              "uuid": "319a87cb-e43b-4130-9f5b-47d5e28d9410",
              "parentUUID": "4b12b051-fcad-4afd-a5d5-b4b65225a826",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57ef0c1b-3c75-4f45-84ef-8006104d2102",
            "319a87cb-e43b-4130-9f5b-47d5e28d9410"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e9030e5f-1737-4e48-a94e-c697056afc06",
          "title": "capitalize function",
          "fullFile": "E:\\Opintoja\\Kurssit\\LK2023_2024\\OhjTestaus\\SW-testing\\sw-test-app\\tests\\capitalize.test.js",
          "file": "\\tests\\capitalize.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should capitalize the first character and lower case the rest",
              "fullTitle": "capitalize function should capitalize the first character and lower case the rest",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('FRED')).to.equal('Fred');\nexpect((0, _capitalize[\"default\"])('freD')).to.equal('Fred');\nexpect((0, _capitalize[\"default\"])('fRed')).to.equal('Fred');\nexpect((0, _capitalize[\"default\"])('fRed FRED')).to.equal('Fred fred');",
              "err": {},
              "uuid": "bc652026-59cd-4ba7-a5b5-c03e4e47f4b5",
              "parentUUID": "e9030e5f-1737-4e48-a94e-c697056afc06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle first char being space",
              "fullTitle": "capitalize function should handle first char being space",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])(' fRED')).to.equal(' fred');",
              "err": {},
              "uuid": "ac253376-7dcd-4edb-a602-97bcb3280cd6",
              "parentUUID": "e9030e5f-1737-4e48-a94e-c697056afc06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle all char being space",
              "fullTitle": "capitalize function should handle all char being space",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('  ')).to.equal('  ');",
              "err": {},
              "uuid": "85888701-df0f-4b94-bda6-2498f5d9ad2c",
              "parentUUID": "e9030e5f-1737-4e48-a94e-c697056afc06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an empty string if provided an empty string",
              "fullTitle": "capitalize function should return an empty string if provided an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('')).to.equal('');",
              "err": {},
              "uuid": "acb19fae-22c7-4880-ab0f-438ad2b64b77",
              "parentUUID": "e9030e5f-1737-4e48-a94e-c697056afc06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle single-character strings",
              "fullTitle": "capitalize function should handle single-character strings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('a')).to.equal('A');\nexpect((0, _capitalize[\"default\"])('Z')).to.equal('Z');",
              "err": {},
              "uuid": "20482983-3417-4c37-a7ea-ace68276f5c7",
              "parentUUID": "e9030e5f-1737-4e48-a94e-c697056afc06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the same string for non-alphabetic characters",
              "fullTitle": "capitalize function should return the same string for non-alphabetic characters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('123')).to.equal('123');\nexpect((0, _capitalize[\"default\"])('#$%')).to.equal('#$%');",
              "err": {},
              "uuid": "ae07f98b-c993-49f7-9eb8-5174e70900fb",
              "parentUUID": "e9030e5f-1737-4e48-a94e-c697056afc06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle mixed alphanumeric strings",
              "fullTitle": "capitalize function should handle mixed alphanumeric strings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _capitalize[\"default\"])('a1b2c3')).to.equal('A1b2c3');\nexpect((0, _capitalize[\"default\"])('1FRED')).to.equal('1fred');\nexpect((0, _capitalize[\"default\"])('#FRED')).to.equal('#fred');",
              "err": {},
              "uuid": "dce9f464-4528-4e1b-b0f1-684fc38da4c1",
              "parentUUID": "e9030e5f-1737-4e48-a94e-c697056afc06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc652026-59cd-4ba7-a5b5-c03e4e47f4b5",
            "ac253376-7dcd-4edb-a602-97bcb3280cd6",
            "85888701-df0f-4b94-bda6-2498f5d9ad2c",
            "acb19fae-22c7-4880-ab0f-438ad2b64b77",
            "20482983-3417-4c37-a7ea-ace68276f5c7",
            "ae07f98b-c993-49f7-9eb8-5174e70900fb",
            "dce9f464-4528-4e1b-b0f1-684fc38da4c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "53d1c307-9667-4a9a-9b11-c7617ddb49fe",
          "title": "countBy",
          "fullFile": "E:\\Opintoja\\Kurssit\\LK2023_2024\\OhjTestaus\\SW-testing\\sw-test-app\\tests\\countBy.test.js",
          "file": "\\tests\\countBy.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should count the number of truthy values returned by the iteratee",
              "fullTitle": "countBy should count the number of truthy values returned by the iteratee",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var users = [{\n  'user': 'barney',\n  'active': true\n}, {\n  'user': 'betty',\n  'active': true\n}, {\n  'user': 'fred',\n  'active': false\n}];\nvar result = (0, _countBy[\"default\"])(users, function (value) {\n  return value.active;\n});\nexpect(result).to.deep.equal({\n  'true': 2,\n  'false': 1\n});",
              "err": {
                "message": "AssertionError: expected { true: 1, false: +0 } to deeply equal { true: 2, false: 1 }",
                "estack": "AssertionError: expected { true: 1, false: +0 } to deeply equal { true: 2, false: 1 }\n    at Context.<anonymous> (tests\\/countBy.test.js:16:28)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": " {\n-   \"false\": 0\n-   \"true\": 1\n+   \"false\": 1\n+   \"true\": 2\n }\n"
              },
              "uuid": "fdba17dd-6125-4983-9758-0c4c7a8aecdd",
              "parentUUID": "53d1c307-9667-4a9a-9b11-c7617ddb49fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should count the occurrences of values returned by the iteratee",
              "fullTitle": "countBy should count the occurrences of values returned by the iteratee",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nvar result = (0, _countBy[\"default\"])(numbers, function (value) {\n  return value % 2 === 0 ? 'even' : 'odd';\n});\nexpect(result).to.deep.equal({\n  'odd': 5,\n  'even': 4\n});",
              "err": {
                "message": "AssertionError: expected { odd: 4, even: 3 } to deeply equal { odd: 5, even: 4 }",
                "estack": "AssertionError: expected { odd: 4, even: 3 } to deeply equal { odd: 5, even: 4 }\n    at Context.<anonymous> (tests\\/countBy.test.js:24:28)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": " {\n-   \"even\": 3\n-   \"odd\": 4\n+   \"even\": 4\n+   \"odd\": 5\n }\n"
              },
              "uuid": "ae0b8637-9da5-4db5-9f1d-c2eea7e64020",
              "parentUUID": "53d1c307-9667-4a9a-9b11-c7617ddb49fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle an empty array",
              "fullTitle": "countBy should handle an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _countBy[\"default\"])([], function (value) {\n  return value;\n});\nexpect(result).to.deep.equal({});",
              "err": {},
              "uuid": "d4d5e839-a8f3-445d-9448-5df1f96169dd",
              "parentUUID": "53d1c307-9667-4a9a-9b11-c7617ddb49fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle an empty object",
              "fullTitle": "countBy should handle an empty object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _countBy[\"default\"])({}, function (value) {\n  return value;\n});\nexpect(result).to.deep.equal({});",
              "err": {},
              "uuid": "010308bf-18d0-43cf-ae8b-40f7e48be336",
              "parentUUID": "53d1c307-9667-4a9a-9b11-c7617ddb49fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4d5e839-a8f3-445d-9448-5df1f96169dd",
            "010308bf-18d0-43cf-ae8b-40f7e48be336"
          ],
          "failures": [
            "fdba17dd-6125-4983-9758-0c4c7a8aecdd",
            "ae0b8637-9da5-4db5-9f1d-c2eea7e64020"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0e34a088-e77e-4f4c-9a3c-52243fc15045",
          "title": "every",
          "fullFile": "E:\\Opintoja\\Kurssit\\LK2023_2024\\OhjTestaus\\SW-testing\\sw-test-app\\tests\\every.test.js",
          "file": "\\tests\\every.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true for an array of truthy values with a truthy predicate",
              "fullTitle": "every should return true for an array of truthy values with a truthy predicate",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [true, 1, 'yes'];\nvar predicate = function predicate(value) {\n  return Boolean(value);\n};\nvar result = (0, _every[\"default\"])(array, predicate);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "83a3829b-549f-4878-80be-a74104f175a0",
              "parentUUID": "0e34a088-e77e-4f4c-9a3c-52243fc15045",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for an array with at least one falsy value and a truthy predicate",
              "fullTitle": "every should return false for an array with at least one falsy value and a truthy predicate",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [true, 1, null, 'yes'];\nvar predicate = function predicate(value) {\n  return Boolean(value);\n};\nvar result = (0, _every[\"default\"])(array, predicate);\nexpect(result).to.be[\"false\"];",
              "err": {},
              "uuid": "60d08ca9-d04a-4c4e-a3b2-f8af36ef854d",
              "parentUUID": "0e34a088-e77e-4f4c-9a3c-52243fc15045",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an empty array with any predicate",
              "fullTitle": "every should return true for an empty array with any predicate",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [];\nvar predicate = function predicate() {\n  return true;\n};\nvar result = (0, _every[\"default\"])(array, predicate);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "b57086da-0c4c-46a2-8df7-1d2055ab19f9",
              "parentUUID": "0e34a088-e77e-4f4c-9a3c-52243fc15045",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an array with all elements meeting the custom predicate",
              "fullTitle": "every should return true for an array with all elements meeting the custom predicate",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [10, 20, 30, 40];\nvar predicate = function predicate(value) {\n  return value % 10 === 0;\n};\nvar result = (0, _every[\"default\"])(array, predicate);\nexpect(result).to.be[\"true\"];",
              "err": {},
              "uuid": "9613dcad-c59d-466d-a0c9-cf650d27519c",
              "parentUUID": "0e34a088-e77e-4f4c-9a3c-52243fc15045",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for an array with at least one element failing the custom predicate",
              "fullTitle": "every should return false for an array with at least one element failing the custom predicate",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var array = [10, 20, 30, 41];\nvar predicate = function predicate(value) {\n  return value % 10 === 0;\n};\nvar result = (0, _every[\"default\"])(array, predicate);\nexpect(result).to.be[\"false\"];",
              "err": {},
              "uuid": "7f9691b1-b637-432b-9f7b-058bb123be2e",
              "parentUUID": "0e34a088-e77e-4f4c-9a3c-52243fc15045",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83a3829b-549f-4878-80be-a74104f175a0",
            "60d08ca9-d04a-4c4e-a3b2-f8af36ef854d",
            "b57086da-0c4c-46a2-8df7-1d2055ab19f9",
            "9613dcad-c59d-466d-a0c9-cf650d27519c",
            "7f9691b1-b637-432b-9f7b-058bb123be2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "94eb1439-5cb6-4cc8-939d-347ad5220258",
          "title": "filter function",
          "fullFile": "E:\\Opintoja\\Kurssit\\LK2023_2024\\OhjTestaus\\SW-testing\\sw-test-app\\tests\\filter.test.js",
          "file": "\\tests\\filter.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should filter an array of users based on the \"active\" property",
              "fullTitle": "filter function should filter an array of users based on the \"active\" property",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var users = [{\n  'user': 'barney',\n  'active': true\n}, {\n  'user': 'fred',\n  'active': false\n}];\nvar result = (0, _filter[\"default\"])(users, function (_ref) {\n  var active = _ref.active;\n  return active;\n});\nexpect(result).to.deep.equal([{\n  'user': 'barney',\n  'active': true\n}]);",
              "err": {},
              "uuid": "9e5a4d9a-c8e4-47cf-9d5f-f355bcde3edf",
              "parentUUID": "94eb1439-5cb6-4cc8-939d-347ad5220258",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an empty array when filtering an empty array",
              "fullTitle": "filter function should return an empty array when filtering an empty array",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var emptyArray = [];\nvar result = (0, _filter[\"default\"])(emptyArray, function () {\n  return true;\n});\nexpect(result).to.deep.equal([]);",
              "err": {
                "message": "AssertionError: expected [ [] ] to deeply equal []",
                "estack": "AssertionError: expected [ [] ] to deeply equal []\n    at Context.<anonymous> (tests\\/filter.test.js:24:28)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": "- [\n-   []\n- ]\n+ []\n"
              },
              "uuid": "8e8e93c8-4393-403b-abed-e10000e4549f",
              "parentUUID": "94eb1439-5cb6-4cc8-939d-347ad5220258",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an empty array when no elements match the predicate",
              "fullTitle": "filter function should return an empty array when no elements match the predicate",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var users = [{\n  'user': 'barney',\n  'active': false\n}, {\n  'user': 'fred',\n  'active': false\n}];\nvar result = (0, _filter[\"default\"])(users, function (_ref2) {\n  var active = _ref2.active;\n  return active;\n});\nexpect(result).to.deep.equal([]);",
              "err": {
                "message": "AssertionError: expected [ [] ] to deeply equal []",
                "estack": "AssertionError: expected [ [] ] to deeply equal []\n    at Context.<anonymous> (tests\\/filter.test.js:36:28)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": "- [\n-   []\n- ]\n+ []\n"
              },
              "uuid": "3d4b5022-712e-4bd1-be19-abf97e4f3a9b",
              "parentUUID": "94eb1439-5cb6-4cc8-939d-347ad5220258",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should filter an array of numbers based on the predicate",
              "fullTitle": "filter function should filter an array of numbers based on the predicate",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var numbers = [1, 2, 3, 4, 5];\nvar result = (0, _filter[\"default\"])(numbers, function (num) {\n  return num % 2 === 0;\n});\nexpect(result).to.deep.equal([2, 4]);",
              "err": {},
              "uuid": "100efdc3-c4b6-42a6-ae6b-f959859bb454",
              "parentUUID": "94eb1439-5cb6-4cc8-939d-347ad5220258",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should filter an array of strings based on the predicate",
              "fullTitle": "filter function should filter an array of strings based on the predicate",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var strings = ['apple', 'banana', 'orange', 'grape'];\nvar result = (0, _filter[\"default\"])(strings, function (str) {\n  return str.length > 5;\n});\nexpect(result).to.deep.equal(['banana', 'orange']);",
              "err": {},
              "uuid": "f9f1f11d-5230-4b94-8f67-980c2c306bcc",
              "parentUUID": "94eb1439-5cb6-4cc8-939d-347ad5220258",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e5a4d9a-c8e4-47cf-9d5f-f355bcde3edf",
            "100efdc3-c4b6-42a6-ae6b-f959859bb454",
            "f9f1f11d-5230-4b94-8f67-980c2c306bcc"
          ],
          "failures": [
            "8e8e93c8-4393-403b-abed-e10000e4549f",
            "3d4b5022-712e-4bd1-be19-abf97e4f3a9b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
          "title": "isDate function",
          "fullFile": "E:\\Opintoja\\Kurssit\\LK2023_2024\\OhjTestaus\\SW-testing\\sw-test-app\\tests\\isDate.test.js",
          "file": "\\tests\\isDate.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true for a Date object",
              "fullTitle": "isDate function should return true for a Date object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(new Date())).to.be[\"true\"];",
              "err": {},
              "uuid": "981d32bd-f067-424a-8b1a-4bd8cf0d31b2",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for a date string",
              "fullTitle": "isDate function should return false for a date string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])('Mon April 23 2012')).to.be[\"false\"];",
              "err": {},
              "uuid": "8f3769a7-dd1a-4d00-b2e3-dc3ba2af198c",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for a number",
              "fullTitle": "isDate function should return false for a number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(1234567890)).to.be[\"false\"];",
              "err": {},
              "uuid": "6c9b2b3b-114a-4e39-af90-1f4ce8beafc0",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for an object",
              "fullTitle": "isDate function should return false for an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])({})).to.be[\"false\"];",
              "err": {},
              "uuid": "e018362d-4c51-4a96-b4f0-bfd71d4d2425",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for an array",
              "fullTitle": "isDate function should return false for an array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])([])).to.be[\"false\"];",
              "err": {},
              "uuid": "8f1a5d62-c8ea-45c9-80e8-d4ddc41f6f64",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for null",
              "fullTitle": "isDate function should return false for null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(null)).to.be[\"false\"];",
              "err": {},
              "uuid": "e4b4f5bb-2cda-439c-8c3b-b5914492b566",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for undefined",
              "fullTitle": "isDate function should return false for undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(undefined)).to.be[\"false\"];",
              "err": {},
              "uuid": "09fb61cf-ffe9-463b-ae33-9112ff488973",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for a Date object with a specific date",
              "fullTitle": "isDate function should return true for a Date object with a specific date",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(new Date('2023-01-01'))).to.be[\"true\"];",
              "err": {},
              "uuid": "ce0df9bb-d017-4ad7-92f5-dca48fa235db",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for a Date object created with year, month, and day parameters",
              "fullTitle": "isDate function should return true for a Date object created with year, month, and day parameters",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(new Date(2023, 0, 1))).to.be[\"true\"];",
              "err": {},
              "uuid": "be39742d-5ec5-4b92-9ea7-7df94e74ee3f",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for a Date object created with a timestamp",
              "fullTitle": "isDate function should return true for a Date object created with a timestamp",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(new Date(1672531200000))).to.be[\"true\"];",
              "err": {},
              "uuid": "ab218225-8279-4e82-9477-010189eb5aa0",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for a Date object created with Date.now()",
              "fullTitle": "isDate function should return true for a Date object created with Date.now()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(new Date(Date.now()))).to.be[\"true\"];",
              "err": {},
              "uuid": "a2ca3803-ebfe-4456-902e-b52b71e0a3e2",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for a Date object created with Date.parse()",
              "fullTitle": "isDate function should return true for a Date object created with Date.parse()",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(new Date(Date.parse('2023-01-01')))).to.be[\"true\"];",
              "err": {},
              "uuid": "39ba663d-9e04-4059-b156-5bddb33d96f5",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for an invalid Date object",
              "fullTitle": "isDate function should return false for an invalid Date object",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(new Date('invalid date string'))).to.be[\"false\"];",
              "err": {
                "message": "AssertionError: expected true to be false",
                "estack": "AssertionError: expected true to be false\n    at Context.<anonymous> (tests\\/isDate.test.js:54:62)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": "- true\n+ false\n"
              },
              "uuid": "9324d1b2-1d15-4dc6-b1bb-fff6ba99280d",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for an object mimicking a Date",
              "fullTitle": "isDate function should return false for an object mimicking a Date",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var fakeDate = {\n  getTime: function getTime() {\n    return 1234567890;\n  }\n};\nexpect((0, _isDate[\"default\"])(fakeDate)).to.be[\"false\"];",
              "err": {},
              "uuid": "20173df7-e05b-448a-99ad-4cb286c4c70f",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for boolean values",
              "fullTitle": "isDate function should return false for boolean values",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(true)).to.be[\"false\"];\nexpect((0, _isDate[\"default\"])(false)).to.be[\"false\"];",
              "err": {},
              "uuid": "28fe0054-bd56-4fc3-a907-01d059f16bb8",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for a symbol",
              "fullTitle": "isDate function should return false for a symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isDate[\"default\"])(Symbol())).to.be[\"false\"];",
              "err": {},
              "uuid": "b5a7b6f8-d50d-4dd2-83e9-5f326523b21a",
              "parentUUID": "6cedda5b-9c2d-4085-8f13-c9f3e3f80279",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "981d32bd-f067-424a-8b1a-4bd8cf0d31b2",
            "8f3769a7-dd1a-4d00-b2e3-dc3ba2af198c",
            "6c9b2b3b-114a-4e39-af90-1f4ce8beafc0",
            "e018362d-4c51-4a96-b4f0-bfd71d4d2425",
            "8f1a5d62-c8ea-45c9-80e8-d4ddc41f6f64",
            "e4b4f5bb-2cda-439c-8c3b-b5914492b566",
            "09fb61cf-ffe9-463b-ae33-9112ff488973",
            "ce0df9bb-d017-4ad7-92f5-dca48fa235db",
            "be39742d-5ec5-4b92-9ea7-7df94e74ee3f",
            "ab218225-8279-4e82-9477-010189eb5aa0",
            "a2ca3803-ebfe-4456-902e-b52b71e0a3e2",
            "39ba663d-9e04-4059-b156-5bddb33d96f5",
            "20173df7-e05b-448a-99ad-4cb286c4c70f",
            "28fe0054-bd56-4fc3-a907-01d059f16bb8",
            "b5a7b6f8-d50d-4dd2-83e9-5f326523b21a"
          ],
          "failures": [
            "9324d1b2-1d15-4dc6-b1bb-fff6ba99280d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "772e8608-357a-45df-be8c-fa4fb5b22f65",
          "title": "isEmpty.js : ",
          "fullFile": "E:\\Opintoja\\Kurssit\\LK2023_2024\\OhjTestaus\\SW-testing\\sw-test-app\\tests\\isEmpty.test.js",
          "file": "\\tests\\isEmpty.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true for null",
              "fullTitle": "isEmpty.js :  should return true for null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])(null)).to.be[\"true\"];",
              "err": {},
              "uuid": "df7015cd-552a-4b89-abd9-f1f7415cbbad",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for true",
              "fullTitle": "isEmpty.js :  should return true for true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])(true)).to.be[\"true\"];",
              "err": {},
              "uuid": "e919ea0f-9338-4b8f-a9aa-25d21ef61726",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for a non-empty array",
              "fullTitle": "isEmpty.js :  should return false for a non-empty array",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])([1, 2, 3])).to.be[\"false\"];",
              "err": {},
              "uuid": "d43b8b06-13dc-4e17-b4d3-1dd009fb1da9",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an empty array",
              "fullTitle": "isEmpty.js :  should return true for an empty array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])([])).to.be[\"true\"];",
              "err": {},
              "uuid": "83b40377-0071-4af1-92ed-42e13774062b",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for a non-empty string",
              "fullTitle": "isEmpty.js :  should return false for a non-empty string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])('abc')).to.be[\"false\"];",
              "err": {},
              "uuid": "136f3bb4-23c9-4e9c-8f9c-d4125ac884e9",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an empty string",
              "fullTitle": "isEmpty.js :  should return true for an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])('')).to.be[\"true\"];",
              "err": {},
              "uuid": "af5303ca-2c7e-4efd-bc8b-154455472234",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for a non-empty object",
              "fullTitle": "isEmpty.js :  should return false for a non-empty object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])({\n  'a': 1\n})).to.be[\"false\"];",
              "err": {},
              "uuid": "83c99a9e-2ac1-4a8d-bf10-3387c046358d",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an empty object",
              "fullTitle": "isEmpty.js :  should return true for an empty object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _isEmpty[\"default\"])({})).to.be[\"true\"];",
              "err": {},
              "uuid": "46651f3d-cec5-41b7-9089-9cc487e1b3b6",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for a non-empty map",
              "fullTitle": "isEmpty.js :  should return false for a non-empty map",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var nonEmptyMap = new Map([['key', 'value']]);\nexpect((0, _isEmpty[\"default\"])(nonEmptyMap)).to.be[\"false\"];",
              "err": {},
              "uuid": "180e314f-44b9-4202-bb54-e4046a986b4c",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an empty map",
              "fullTitle": "isEmpty.js :  should return true for an empty map",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var emptyMap = new Map();\nexpect((0, _isEmpty[\"default\"])(emptyMap)).to.be[\"true\"];",
              "err": {},
              "uuid": "a6529c22-0665-4af1-aa74-11d5d5d0afae",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for a non-empty set",
              "fullTitle": "isEmpty.js :  should return false for a non-empty set",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var nonEmptySet = new Set([1, 2, 3]);\nexpect((0, _isEmpty[\"default\"])(nonEmptySet)).to.be[\"false\"];",
              "err": {},
              "uuid": "f39b722f-4abb-4eab-90a3-2ee73778c2e8",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an empty set",
              "fullTitle": "isEmpty.js :  should return true for an empty set",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var emptySet = new Set();\nexpect((0, _isEmpty[\"default\"])(emptySet)).to.be[\"true\"];",
              "err": {},
              "uuid": "bd0cafad-dcc6-4ea1-a357-01c4c3d840ee",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an empty object with prototype properties",
              "fullTitle": "isEmpty.js :  should return true for an empty object with prototype properties",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function MyObject() {}\nMyObject.prototype.someProperty = 'someValue';\nvar emptyObjectWithPrototype = new MyObject();\nexpect((0, _isEmpty[\"default\"])(emptyObjectWithPrototype)).to.be[\"true\"];",
              "err": {},
              "uuid": "5b3fc604-6f4f-40f0-a461-9beb45bec8dc",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true for an object prototype with no own properties",
              "fullTitle": "isEmpty.js :  should return true for an object prototype with no own properties",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "function MyObject() {}\nMyObject.prototype.testProperty = 123;\nvar prototypeOfMyObject = Object.getPrototypeOf(new MyObject());\nexpect((0, _isEmpty[\"default\"])(prototypeOfMyObject)).to.be[\"true\"];",
              "err": {
                "message": "AssertionError: expected false to be true",
                "estack": "AssertionError: expected false to be true\n    at Context.<anonymous> (tests\\/isEmpty.test.js:74:49)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "ccde1ee8-9e95-4be3-b5b6-6a126a5762b0",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false for an object prototype with own properties",
              "fullTitle": "isEmpty.js :  should return false for an object prototype with own properties",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "function MyObject() {\n  this.ownProperty = 456;\n}\nMyObject.prototype.testProperty = 123;\nvar prototypeOfMyObject = Object.getPrototypeOf(new MyObject());\nexpect((0, _isEmpty[\"default\"])(prototypeOfMyObject)).to.be[\"false\"];",
              "err": {},
              "uuid": "872c054f-2a12-476b-812b-fadfa9193521",
              "parentUUID": "772e8608-357a-45df-be8c-fa4fb5b22f65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df7015cd-552a-4b89-abd9-f1f7415cbbad",
            "e919ea0f-9338-4b8f-a9aa-25d21ef61726",
            "d43b8b06-13dc-4e17-b4d3-1dd009fb1da9",
            "83b40377-0071-4af1-92ed-42e13774062b",
            "136f3bb4-23c9-4e9c-8f9c-d4125ac884e9",
            "af5303ca-2c7e-4efd-bc8b-154455472234",
            "83c99a9e-2ac1-4a8d-bf10-3387c046358d",
            "46651f3d-cec5-41b7-9089-9cc487e1b3b6",
            "180e314f-44b9-4202-bb54-e4046a986b4c",
            "a6529c22-0665-4af1-aa74-11d5d5d0afae",
            "f39b722f-4abb-4eab-90a3-2ee73778c2e8",
            "bd0cafad-dcc6-4ea1-a357-01c4c3d840ee",
            "5b3fc604-6f4f-40f0-a461-9beb45bec8dc",
            "872c054f-2a12-476b-812b-fadfa9193521"
          ],
          "failures": [
            "ccde1ee8-9e95-4be3-b5b6-6a126a5762b0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a2ecb3a4-ef9d-4f8a-8ac9-643a6afa6acb",
          "title": "toNumber",
          "fullFile": "E:\\Opintoja\\Kurssit\\LK2023_2024\\OhjTestaus\\SW-testing\\sw-test-app\\tests\\toNumber.test.js",
          "file": "\\tests\\toNumber.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert a valid number to itself",
              "fullTitle": "toNumber should convert a valid number to itself",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])(3.2)).to.equal(3.2);\nexpect((0, _toNumber[\"default\"])(Number.MIN_VALUE)).to.equal(5e-324);\nexpect((0, _toNumber[\"default\"])(Infinity)).to.equal(Infinity);",
              "err": {},
              "uuid": "812230cc-8664-41bf-aee2-4f1528108678",
              "parentUUID": "a2ecb3a4-ef9d-4f8a-8ac9-643a6afa6acb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return NaN for Symbol values",
              "fullTitle": "toNumber should return NaN for Symbol values",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isNaN((0, _toNumber[\"default\"])(Symbol('test')))).to.be[\"true\"];",
              "err": {},
              "uuid": "a0d32d9d-fe3e-44c7-848f-13aa641188fc",
              "parentUUID": "a2ecb3a4-ef9d-4f8a-8ac9-643a6afa6acb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert string representation of numbers to actual numbers",
              "fullTitle": "toNumber should convert string representation of numbers to actual numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('3.2')).to.equal(3.2);\nexpect((0, _toNumber[\"default\"])('-123')).to.equal(-123);",
              "err": {},
              "uuid": "83197037-bb29-475d-ac08-426afa7344a6",
              "parentUUID": "a2ecb3a4-ef9d-4f8a-8ac9-643a6afa6acb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle object values by using valueOf method if available",
              "fullTitle": "toNumber should handle object values by using valueOf method if available",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var objWithValueOf = {\n  valueOf: function valueOf() {\n    return 42;\n  }\n};\nvar objWithoutValueOf = {\n  key: 'value'\n};\nexpect((0, _toNumber[\"default\"])(objWithValueOf)).to.equal(42);\nexpect((0, _toNumber[\"default\"])(objWithoutValueOf)).to.be.NaN;",
              "err": {},
              "uuid": "64ca8242-549d-403c-bcae-6642ad65c795",
              "parentUUID": "a2ecb3a4-ef9d-4f8a-8ac9-643a6afa6acb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle binary and octal string values",
              "fullTitle": "toNumber should handle binary and octal string values",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('0b1010')).to.equal(10);\nexpect((0, _toNumber[\"default\"])('0o777')).to.equal(511);",
              "err": {},
              "uuid": "5eb034ed-b841-4972-afae-b75be991b039",
              "parentUUID": "a2ecb3a4-ef9d-4f8a-8ac9-643a6afa6acb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle bad hex string values and return NaN",
              "fullTitle": "toNumber should handle bad hex string values and return NaN",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isNaN((0, _toNumber[\"default\"])('-0x123'))).to.be[\"true\"];",
              "err": {},
              "uuid": "15edd00f-6773-4079-a0b1-a0e7e13a9891",
              "parentUUID": "a2ecb3a4-ef9d-4f8a-8ac9-643a6afa6acb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0 for string \"0\"",
              "fullTitle": "toNumber should return 0 for string \"0\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toNumber[\"default\"])('0')).to.equal(0);",
              "err": {},
              "uuid": "cf43d0fe-cc29-4fbe-933d-712b9f3fa387",
              "parentUUID": "a2ecb3a4-ef9d-4f8a-8ac9-643a6afa6acb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return NaN for invalid input",
              "fullTitle": "toNumber should return NaN for invalid input",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(isNaN((0, _toNumber[\"default\"])('invalid'))).to.be[\"true\"];",
              "err": {},
              "uuid": "abeb186b-178c-4557-af8a-5511f942aec4",
              "parentUUID": "a2ecb3a4-ef9d-4f8a-8ac9-643a6afa6acb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "812230cc-8664-41bf-aee2-4f1528108678",
            "a0d32d9d-fe3e-44c7-848f-13aa641188fc",
            "83197037-bb29-475d-ac08-426afa7344a6",
            "64ca8242-549d-403c-bcae-6642ad65c795",
            "5eb034ed-b841-4972-afae-b75be991b039",
            "15edd00f-6773-4079-a0b1-a0e7e13a9891",
            "cf43d0fe-cc29-4fbe-933d-712b9f3fa387",
            "abeb186b-178c-4557-af8a-5511f942aec4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c240b2d5-a0a0-4657-8f48-3217d41df880",
          "title": "toString function",
          "fullFile": "E:\\Opintoja\\Kurssit\\LK2023_2024\\OhjTestaus\\SW-testing\\sw-test-app\\tests\\toString.test.js",
          "file": "\\tests\\toString.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert null to an empty string",
              "fullTitle": "toString function should convert null to an empty string",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// it('should convert null to string \"null\"', () => {\n// original:\nexpect((0, _toString[\"default\"])(null)).to.equal('');\n// modified:\n// expect(toString(null)).to.equal('null');",
              "err": {
                "message": "AssertionError: expected 'null' to equal ''",
                "estack": "AssertionError: expected 'null' to equal ''\n    at Context.<anonymous> (tests\\/toString.test.js:9:35)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": "- null\n"
              },
              "uuid": "e86cb08d-4668-4f58-9c7f-6d4aee9c16c4",
              "parentUUID": "c240b2d5-a0a0-4657-8f48-3217d41df880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert undefined to an empty string",
              "fullTitle": "toString function should convert undefined to an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// it('should convert undefined to string \"undefined\"', () => {\n// original:\nexpect((0, _toString[\"default\"])(undefined)).to.equal('');\n//modified:\n// expect(toString(undefined)).to.equal('undefined');",
              "err": {
                "message": "AssertionError: expected 'undefined' to equal ''",
                "estack": "AssertionError: expected 'undefined' to equal ''\n    at Context.<anonymous> (tests\\/toString.test.js:18:40)\n    at processImmediate (node:internal/timers:466:21)",
                "diff": "- undefined\n"
              },
              "uuid": "6de88f08-6a2e-41dd-8e6a-ab595d6b114c",
              "parentUUID": "c240b2d5-a0a0-4657-8f48-3217d41df880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should preserve the sign of -0",
              "fullTitle": "toString function should preserve the sign of -0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(-0)).to.equal('-0');",
              "err": {},
              "uuid": "7e0607c2-d65a-4f72-a409-63f727061d25",
              "parentUUID": "c240b2d5-a0a0-4657-8f48-3217d41df880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert an array to a comma-separated string",
              "fullTitle": "toString function should convert an array to a comma-separated string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([1, 2, 3])).to.equal('1,2,3');",
              "err": {},
              "uuid": "2e5bd4d4-9340-4e52-aca1-9de199851b2c",
              "parentUUID": "c240b2d5-a0a0-4657-8f48-3217d41df880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert a number to a string",
              "fullTitle": "toString function should convert a number to a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(123)).to.equal('123');",
              "err": {},
              "uuid": "f03d3b0d-3856-4171-811d-f484477bfdac",
              "parentUUID": "c240b2d5-a0a0-4657-8f48-3217d41df880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert a boolean to a string",
              "fullTitle": "toString function should convert a boolean to a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])(true)).to.equal('true');\nexpect((0, _toString[\"default\"])(false)).to.equal('false');",
              "err": {},
              "uuid": "2baed5be-a337-44dc-a283-db2f4cb13609",
              "parentUUID": "c240b2d5-a0a0-4657-8f48-3217d41df880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert an array with mixed types including numbers and strings",
              "fullTitle": "toString function should convert an array with mixed types including numbers and strings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([1, 'two', 3])).to.equal('1,two,3');",
              "err": {},
              "uuid": "e065c7c9-96bd-4f8c-b59f-9978f706981d",
              "parentUUID": "c240b2d5-a0a0-4657-8f48-3217d41df880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert an array with null and undefined to strings with empty values for these elements",
              "fullTitle": "toString function should convert an array with null and undefined to strings with empty values for these elements",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([null, undefined, 1])).to.equal(',,1');",
              "err": {},
              "uuid": "c4abe72f-8c46-4b2d-ba55-681f9507ca09",
              "parentUUID": "c240b2d5-a0a0-4657-8f48-3217d41df880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should convert an array with boolean values to their string representations",
              "fullTitle": "toString function should convert an array with boolean values to their string representations",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect((0, _toString[\"default\"])([true, false])).to.equal('true,false');",
              "err": {},
              "uuid": "044089ef-35ce-46bb-8bf4-b17988604e1b",
              "parentUUID": "c240b2d5-a0a0-4657-8f48-3217d41df880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "converts a Symbol to a string",
              "fullTitle": "toString function converts a Symbol to a string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var symbol = Symbol(\"test symbol\");\nexpect((0, _toString[\"default\"])(symbol)).to.equal('Symbol(test symbol)');",
              "err": {},
              "uuid": "c7e027ac-0c52-4022-b168-f5e4d1118977",
              "parentUUID": "c240b2d5-a0a0-4657-8f48-3217d41df880",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e0607c2-d65a-4f72-a409-63f727061d25",
            "2e5bd4d4-9340-4e52-aca1-9de199851b2c",
            "f03d3b0d-3856-4171-811d-f484477bfdac",
            "2baed5be-a337-44dc-a283-db2f4cb13609",
            "e065c7c9-96bd-4f8c-b59f-9978f706981d",
            "c4abe72f-8c46-4b2d-ba55-681f9507ca09",
            "044089ef-35ce-46bb-8bf4-b17988604e1b",
            "c7e027ac-0c52-4022-b168-f5e4d1118977"
          ],
          "failures": [
            "e86cb08d-4668-4f58-9c7f-6d4aee9c16c4",
            "6de88f08-6a2e-41dd-8e6a-ab595d6b114c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8837a519-6d00-416a-a5c0-9a294f0a946b",
          "title": "words",
          "fullFile": "E:\\Opintoja\\Kurssit\\LK2023_2024\\OhjTestaus\\SW-testing\\sw-test-app\\tests\\words.test.js",
          "file": "\\tests\\words.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should split string into words using default pattern",
              "fullTitle": "words should split string into words using default pattern",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _words[\"default\"])('fred, barney, & pebbles');\nexpect(result).to.deep.equal(['fred', 'barney', 'pebbles']);",
              "err": {},
              "uuid": "95b802c8-9887-46fc-8348-49aacd4b88a8",
              "parentUUID": "8837a519-6d00-416a-a5c0-9a294f0a946b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should split string into words using provided pattern",
              "fullTitle": "words should split string into words using provided pattern",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _words[\"default\"])('fred, barney, & pebbles', /[^, ]+/g);\nexpect(result).to.deep.equal(['fred', 'barney', '&', 'pebbles']);",
              "err": {},
              "uuid": "8cf1badd-79a6-4986-8241-a61a59616207",
              "parentUUID": "8837a519-6d00-416a-a5c0-9a294f0a946b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle empty string",
              "fullTitle": "words should handle empty string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _words[\"default\"])('');\nexpect(result).to.deep.equal([]);",
              "err": {},
              "uuid": "abbef9e9-ea25-4320-85ea-9dd28c9ddeec",
              "parentUUID": "8837a519-6d00-416a-a5c0-9a294f0a946b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle string with Unicode words",
              "fullTitle": "words should handle string with Unicode words",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _words[\"default\"])('你好, 世界');\nexpect(result).to.deep.equal(['你好', '世界']);",
              "err": {},
              "uuid": "cc012549-f3d1-4716-9506-560c33e587d8",
              "parentUUID": "8837a519-6d00-416a-a5c0-9a294f0a946b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle string with mixed Unicode and ASCII words",
              "fullTitle": "words should handle string with mixed Unicode and ASCII words",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _words[\"default\"])('Hello, 你好, World');\nexpect(result).to.deep.equal(['Hello', '你好', 'World']);",
              "err": {},
              "uuid": "5dda9598-f916-4536-ac9e-bcaab9a7fec9",
              "parentUUID": "8837a519-6d00-416a-a5c0-9a294f0a946b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95b802c8-9887-46fc-8348-49aacd4b88a8",
            "8cf1badd-79a6-4986-8241-a61a59616207",
            "abbef9e9-ea25-4320-85ea-9dd28c9ddeec",
            "cc012549-f3d1-4716-9506-560c33e587d8",
            "5dda9598-f916-4536-ac9e-bcaab9a7fec9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}